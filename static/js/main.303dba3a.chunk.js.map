{"version":3,"sources":["components/ExpenseForm.jsx","components/ExpenseItem.jsx","components/ExpenseList.jsx","components/Notification.jsx","components/ExpenseApp.jsx","App.js","serviceWorker.js","index.js"],"names":["ExpenseForm","name","amount","edit","handleExpense","handleAmount","handleSubmit","styles","inputSpacing","margin","onSubmit","type","id","placeholder","value","onChange","className","style","ExpenseItem","expense","handleEdit","handleDelete","expenseCard","backgroundColor","padding","borderRadius","expenseText","onClick","ExpenseList","expenses","handleClear","map","key","length","Notification","text","color","ExpenseApp","useState","setExpenses","setID","setAmount","setName","setEdit","notification","setNotification","useEffect","uuid","canvas","width","header","textAlign","container","display","flexDirection","justifyContent","alignItems","halfContainer","title","reduce","acc","curr","parseInt","event","target","preventDefault","newExpense","tempExpenses","e","expenseId","singleExpense","find","item","filter","App","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iNA6CeA,G,KA1CK,SAAC,GAOd,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,OACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EAAS,CACbC,aAAc,CACZC,OAAQ,YAGZ,OACE,0BAAMC,SAAUJ,GACd,2BACEK,KAAK,OACLC,GAAG,UACHX,KAAK,UACLY,YAAY,eACZC,MAAOb,EACPc,SAAUX,EACVY,UAAU,eACVC,MAAOV,EAAOC,eAEhB,2BACEG,KAAK,SACLC,GAAG,SACHX,KAAK,SACLY,YAAY,SACZC,MAAOZ,EACPa,SAAUV,EACVW,UAAU,eACVC,MAAOV,EAAOC,eAEhB,4BAAQG,KAAK,SAASK,UAAU,gBAC7Bb,EAAO,OAAS,MAAO,QCGjBe,EAvCK,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACpCd,EAAS,CACbe,YAAa,CACXC,gBAAiB,UACjBd,OAAQ,WACRe,QAAS,GACTC,aAAc,GAEhBC,YAAa,CACXjB,OAAQ,YAIZ,OACE,yBAAKQ,MAAOV,EAAOe,aACjB,uBAAGL,MAAOV,EAAOmB,aACf,uCADF,IACmBP,EAAQlB,MAE3B,uBAAGgB,MAAOV,EAAOmB,aACf,sCADF,KACmBP,EAAQjB,QAE3B,4BACES,KAAK,SACLK,UAAU,0BACVW,QAAS,kBAAMP,EAAWD,EAAQP,MAHpC,QAOA,4BACED,KAAK,SACLK,UAAU,+BACVW,QAAS,kBAAMN,EAAaF,EAAQP,MAHtC,YCHSgB,EAvBK,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAUT,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,aAAcS,EAAkB,EAAlBA,YACzD,OACE,6BACGD,EAASE,KAAI,SAACZ,GACb,OACE,kBAAC,EAAD,CACEa,IAAKb,EAAQP,GACbO,QAASA,EACTC,WAAYA,EACZC,aAAcA,OAKnBQ,EAASI,OAAS,GACjB,4BAAQN,QAASG,EAAad,UAAU,kBAAxC,wBCROkB,EAVM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOtB,OAAO,uBAAGlB,MALD,CACLmB,MAAO,UACP3B,OAAQ,KAGoB0B,ICiJnBE,MAlJf,WAAuB,IAAD,EACYC,mBAAS,IADrB,mBACbT,EADa,KACHU,EADG,OAGAD,mBAAS,IAHT,mBAGb1B,EAHa,KAGT4B,EAHS,OAKQF,mBAAS,IALjB,mBAKbpC,EALa,KAKLuC,EALK,OAOIH,mBAAS,IAPb,mBAObrC,EAPa,KAOPyC,EAPO,OASIJ,oBAAS,GATb,mBASbnC,EATa,KASPwC,EATO,OAWoBL,mBAAS,IAX7B,mBAWbM,EAXa,KAWCC,EAXD,KA0EpBC,qBAAU,WACRP,EAAY,CACV,CAAE3B,GAAImC,MAAQ9C,KAAM,QAASC,OAAQ,IACrC,CAAEU,GAAImC,MAAQ9C,KAAM,OAAQC,OAAQ,KACpC,CAAEU,GAAImC,MAAQ9C,KAAM,YAAaC,OAAQ,IACzC,CAAEU,GAAImC,MAAQ9C,KAAM,MAAOC,OAAQ,QAEpC,IAEH,IAAMK,EAAS,CACbyC,OAAQ,CACNC,MAAO,MACPxC,OAAQ,QAEVyC,OAAQ,CACNC,UAAW,UAEbjD,OAAQ,CACNkC,MAAO,WAETgB,UAAW,CACTC,QAAS,OACTC,cAAe,MACfC,eAAgB,eAChBC,WAAY,cAEdC,cAAe,CACbR,MAAO,MACP1B,gBAAiB,UACjBC,QAAS,GACTC,aAAc,GAEhBiC,MAAO,CACLtB,MAAO,YAIX,OACE,yBAAKnB,MAAOV,EAAOyC,QACjB,wBAAI/B,MAAOV,EAAO2C,QAAlB,YACA,wBAAIjC,MAAOV,EAAO2C,QAAlB,iBACgB,0BAAMjC,MAAOV,EAAOL,QAApB,IA/CX2B,EAAS8B,QAAO,SAACC,EAAKC,GAC3B,OAAOD,EAAME,SAASD,EAAK3D,UAC1B,KAgDD,6BACA,yBAAKe,MAAOV,EAAO6C,WACjB,yBAAKnC,MAAOV,EAAOkD,eACjB,wBAAIxC,MAAOV,EAAOmD,OAAlB,kBACA,kBAAC,EAAD,CACEzD,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNC,cA5GS,SAAC2D,GAElBrB,EAAQqB,EAAMC,OAAOlD,QA2GbT,aAlHW,SAAC0D,GAEpBtB,EAAUsB,EAAMC,OAAOlD,QAiHfR,aAjGW,SAACyD,GAEpB,GADAA,EAAME,iBACO,KAAThE,GAA0B,KAAXC,GAAiBA,GAAU,EAC5C2C,EACE,6EAEG,CACL,IAAMqB,EACG,KAAPtD,EACI,CAAEA,GAAImC,MAAQ9C,KAAMA,EAAMC,OAAQA,GAClC,CAAEU,GAAIA,EAAIX,KAAMA,EAAMC,OAAQA,GACpC,GAAIC,EAAM,CACR,IAAMgE,EAAetC,EAASE,KAAI,SAACqC,GAAD,OAChCA,EAAExD,KAAOA,EAAKsD,EAAaE,KAE7B7B,EAAY4B,QAEZ5B,EAAY,GAAD,mBAAKV,GAAL,CAAeqC,KAE5B1B,EAAM,IACNE,EAAQ,IACRD,EAAU,IACVI,EAAgB,IAChBF,GAAQ,OA4EHC,GAAgB,kBAAC,EAAD,CAAcT,KAAMS,KAEvC,yBAAK3B,MAAOV,EAAOkD,eACjB,wBAAIxC,MAAOV,EAAOmD,OAAlB,gBACA,kBAAC,EAAD,CACE7B,SAAUA,EACVT,WAjHS,SAACiD,GAClB,IAAMC,EAAgBzC,EAAS0C,MAAK,SAACC,GAAD,OAAUA,EAAK5D,KAAOyD,KAC1D1B,GAAQ,GACRD,EAAQ4B,EAAcrE,MACtBwC,EAAU6B,EAAcpE,QACxBsC,EAAM8B,EAAc1D,KA6GZS,aA/EW,SAACgD,GACpB,IAAMF,EAAetC,EAAS4C,QAAO,SAACL,GAAD,OAAOA,EAAExD,KAAOyD,KACrD9B,EAAY4B,IA8EJrC,YA3EU,WAClBS,EAAY,WCrDDmC,MAhBf,WASI,OACI,yBAAKzD,MAPA,CACDM,gBAAiB,UACjBoD,OAAQ,UAMR,kBAAC,EAAD,QCFQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.303dba3a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ExpenseForm = ({\n  name,\n  amount,\n  edit,\n  handleExpense,\n  handleAmount,\n  handleSubmit,\n}) => {\n  const styles = {\n    inputSpacing: {\n      margin: \"5px 0px\",\n    },\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        id=\"expense\"\n        name=\"expense\"\n        placeholder=\"Expense Name\"\n        value={name}\n        onChange={handleExpense}\n        className=\"form-control\"\n        style={styles.inputSpacing}\n      />\n      <input\n        type=\"number\"\n        id=\"amount\"\n        name=\"amount\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={handleAmount}\n        className=\"form-control\"\n        style={styles.inputSpacing}\n      />\n      <button type=\"submit\" className=\"btn btn-dark\">\n        {edit ? \"Edit\" : \"Add\"}{\" \"}\n      </button>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ExpenseItem = ({ expense, handleEdit, handleDelete }) => {\n  const styles = {\n    expenseCard: {\n      backgroundColor: \"#f9f9f9\",\n      margin: \"10px 0px\",\n      padding: 10,\n      borderRadius: 5,\n    },\n    expenseText: {\n      margin: \"3px 0px\",\n    },\n  };\n\n  return (\n    <div style={styles.expenseCard}>\n      <p style={styles.expenseText}>\n        <b>Expense:</b> {expense.name}\n      </p>\n      <p style={styles.expenseText}>\n        <b>Amount:</b> ${expense.amount}\n      </p>\n      <button\n        type=\"submit\"\n        className=\"btn btn-dark btn-sm m-1\"\n        onClick={() => handleEdit(expense.id)}\n      >\n        Edit\n      </button>\n      <button\n        type=\"submit\"\n        className=\"btn btn-secondary btn-sm m-1\"\n        onClick={() => handleDelete(expense.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpenseList = ({ expenses, handleEdit, handleDelete, handleClear }) => {\n  return (\n    <div>\n      {expenses.map((expense) => {\n        return (\n          <ExpenseItem\n            key={expense.id}\n            expense={expense}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n        );\n      })}\n\n      {expenses.length > 0 && (\n        <button onClick={handleClear} className=\"btn btn-danger\">\n          Clear All Expenses\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ExpenseList;\n","import React from \"react\";\n\nconst Notification = ({ text }) => {\n  const styles = {\n    error: {\n      color: \"#f5f5f5\",\n      margin: 10,\n    },\n  };\n  return <p style={styles.error}>{text}</p>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport ExpenseList from \"./ExpenseList\";\nimport Notification from \"./Notification\";\n\nfunction ExpenseApp() {\n  const [expenses, setExpenses] = useState([]);\n\n  const [id, setID] = useState(\"\");\n\n  const [amount, setAmount] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n\n  const [edit, setEdit] = useState(false);\n\n  const [notification, setNotification] = useState(\"\");\n\n  const handleAmount = (event) => {\n    // console.log(\"amount changed\", event.target.value);\n    setAmount(event.target.value);\n  };\n\n  const handleName = (event) => {\n    // console.log(\"expense changed\", event.target.value);\n    setName(event.target.value);\n  };\n\n  const handleEdit = (expenseId) => {\n    const singleExpense = expenses.find((item) => item.id === expenseId);\n    setEdit(true);\n    setName(singleExpense.name);\n    setAmount(singleExpense.amount);\n    setID(singleExpense.id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name === \"\" || amount === \"\" || amount <= 0) {\n      setNotification(\n        \"Error: Name cannot be an empty and amount has to be greater than zero\"\n      );\n    } else {\n      const newExpense =\n        id === \"\"\n          ? { id: uuid(), name: name, amount: amount }\n          : { id: id, name: name, amount: amount };\n      if (edit) {\n        const tempExpenses = expenses.map((e) =>\n          e.id === id ? newExpense : e\n        );\n        setExpenses(tempExpenses);\n      } else {\n        setExpenses([...expenses, newExpense]);\n      }\n      setID(\"\");\n      setName(\"\");\n      setAmount(\"\");\n      setNotification(\"\");\n      setEdit(false);\n    }\n  };\n\n  const handleDelete = (expenseId) => {\n    const tempExpenses = expenses.filter((e) => e.id !== expenseId);\n    setExpenses(tempExpenses);\n  };\n\n  const handleClear = () => {\n    setExpenses([]);\n  };\n\n  const totalAmount = () => {\n    return expenses.reduce((acc, curr) => {\n      return acc + parseInt(curr.amount);\n    }, 0);\n  };\n\n  //Sets default expenses on mount of this component\n  useEffect(() => {\n    setExpenses([\n      { id: uuid(), name: \"Lunch\", amount: 25 },\n      { id: uuid(), name: \"Rent\", amount: 500 },\n      { id: uuid(), name: \"Groceries\", amount: 60 },\n      { id: uuid(), name: \"Gas\", amount: 40 },\n    ]);\n  }, []);\n\n  const styles = {\n    canvas: {\n      width: \"80%\",\n      margin: \"auto\",\n    },\n    header: {\n      textAlign: \"center\",\n    },\n    amount: {\n      color: \"#007d43\",\n    },\n    container: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      alignItems: \"flex-start\",\n    },\n    halfContainer: {\n      width: \"45%\",\n      backgroundColor: \"#007d43\",\n      padding: 10,\n      borderRadius: 5,\n    },\n    title: {\n      color: \"#f9f9f9\",\n    },\n  };\n\n  return (\n    <div style={styles.canvas}>\n      <h1 style={styles.header}>Expenses</h1>\n      <h3 style={styles.header}>\n        Total amount: <span style={styles.amount}>${totalAmount()}</span>\n      </h3>\n\n      <hr />\n      <div style={styles.container}>\n        <div style={styles.halfContainer}>\n          <h4 style={styles.title}>Add an Expense</h4>\n          <ExpenseForm\n            name={name}\n            amount={amount}\n            edit={edit}\n            handleExpense={handleName}\n            handleAmount={handleAmount}\n            handleSubmit={handleSubmit}\n          />\n          {notification && <Notification text={notification} />}\n        </div>\n        <div style={styles.halfContainer}>\n          <h4 style={styles.title}>Expense List</h4>\n          <ExpenseList\n            expenses={expenses}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n            handleClear={handleClear}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseApp;\n","import React from \"react\";\nimport ExpenseApp from \"./components/ExpenseApp\";\n\nfunction App() {\n\n    const styles = {\n        app: {\n            backgroundColor: \"#d6f6e7\",\n            height: \"100vh\"\n        }\n    }\n\n    return (\n        <div style={styles.app}>\n            <ExpenseApp />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}